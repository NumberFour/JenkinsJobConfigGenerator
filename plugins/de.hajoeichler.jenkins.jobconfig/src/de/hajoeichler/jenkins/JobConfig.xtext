grammar de.hajoeichler.jenkins.JobConfig with org.eclipse.xtext.common.Terminals //with de.hajoeichler.jenkins.ExtMail
generate jobConfig "http://www.hajoeichler.de/jenkins/JobConfig"

Model:
	("group" name=ID "("
	(configs+=Config)*
	")"
	|
	(configs+=Config)*);

Config:
	"job" name=ID ("extends" pareentConfig=[Config])? "("
	(isDisabled?="isDisabled")?
	(oldBuildHandling=OldBuildHandling)?
	(executeConcurrent?="executeConcurrent")?
	("description" description=STRING)?
	(isMatixJob?="isMatrixJob")?
	("restrictRunning" restrictTo=STRING)?
	('gitUrl' gitUrl=STRING)? // 3rdParty

	(paramSection=ParameterSection)?
	(scm=Scm)?
	(trigger=TriggerSection)?
	(wrapper=WrapperSection)?
	(buildSection=BuildSection)?
	(publisherSection=PublisherSection)?
	")";

OldBuildHandling:
	"oldBuilds" "("
	("daysToKeep" daysToKeep=INT)?
	("maxNumberOfBuilds" maxNumberOfBuilds=INT)?
	("daysToKeepArtifact" daysToKeepArtifact=INT)?
	("maxNumberOfBuildsWithArtifact" maxNumberOfBuildsWithArtifact=INT)?
	")";

ParameterSection:
	"params" "("
	parameters+=Parameter+
	")";

Parameter:
	name=ID "("
	type=ParameterType
	("description" description=STRING)?
	")";

ParameterType:
	StringParam | BooleanParam | ChoiceParam;

StringParam:
	"String" value=STRING;

BooleanParam:
	"Boolean" (checked?="isChecked")?;

ChoiceParam:
	"Choice" choices=STRING;

Scm:
	ScmGit | ScmCVS;

ScmGit: // 3rdParty
	"git" "(" "url" url=STRING ("branch" branch=STRING)? (wipeOutWorkspace?="wipeOutWorkspace")?
	(excludedRegions?="excludedRegions")? ")";

ScmCVS:
	"cvs" "(" "cvsroot" root=STRING "modules" modules=STRING ")";

TriggerSection:
	"trigger" "(" buildtriggers+=(TimerTrigger | PollScmTrigger | FirstStartTrigger)+ ")";

TimerTrigger:
	"periodically" timer=STRING;

PollScmTrigger:
	"pollScm" poll=STRING;

FirstStartTrigger: // 3rdParty
	buildOnFirstStart?="buildOnFirstStart";

WrapperSection:
	"wrappers" "("
	wrappers+=(AnsiColor | Release | Timeout | Lock)+ // Android
	")";

AnsiColor: // 3rdParty
	(ansicolor?='ansicolor');

Release: // 3rdParty
	"release" "("
	(notKeepForever?='notKeepForever')?
	(paramSection=ParameterSection)?
	("pre" preBuildSection=BuildSection)?
	("success" successBuildSection=BuildSection)?
	("failed" failedBuildSection=BuildSection)?
	("final" finalBuildSection=BuildSection)?
	")";

Timeout: // 3rdParty
	"timeout" t=INT (failBuild?='failBuild')?;

Lock: // 3rdParty
	"lock" lock=STRING;

BuildSection:
	"builds" "("
	builds+=(Maven | Shell | TriggerBuilderSection)+ // Ant | Batch | SystemGroovy | MSBuild | TriggerBuilder | Rake
	")";

Maven:
	"maven" "("
	"goals" mavenGoals=STRING
	("pom" mavenPOM=STRING)?
	("properties" mavenProperties=STRING)?
	(mavenPrivateRepo?="usePrivateRepo")?
	")";

Shell:
	"sh" "("
	shellScript=STRING
	(append?="append")?
	")";

TriggerBuilderSection:
	"triggered builds" "("
	(triggeredBuilds+=TriggeredBuild)+
	")";

TriggeredBuild:
	build=[Config]
	(blocking?='blocking')?
	(triggerParams+=(CurrentTriggerParams | PropertyFileTriggerParams | PredefinedTriggerParams)+)?;

CurrentTriggerParams:
	currentParams?='currentParams';

PropertyFileTriggerParams:
	'propertyFile' propertyFile=STRING;

PredefinedTriggerParams:
	'predefined' predefined=STRING;

PublisherSection:
	"publishers" "("
	publishers+=(Artifacts)+ // | Claim | TestResult | Cobertura | Rcov | HTMLReport | DownStreamTriggerBuilder)+
	")";

Artifacts:
	"artifacts" artifacts=STRING;

