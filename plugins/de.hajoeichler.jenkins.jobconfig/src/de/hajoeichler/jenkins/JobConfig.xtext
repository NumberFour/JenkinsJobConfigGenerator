grammar de.hajoeichler.jenkins.JobConfig with org.eclipse.xtext.common.Terminals //with de.hajoeichler.jenkins.ExtMail
generate jobConfig "http://www.hajoeichler.de/jenkins/JobConfig"

Model:
	(declSpecs+=DeclSpecs)?
	("group" name=ID "("
	(configs+=Config)*
	")"
	|
	(configs+=Config)*);

DeclSpecs:
	"declarations" "("
	decls+=(AntDecl | MavenDecl | LockDecl)* // | WarningDecl)+
	")"
;

AntDecl:
	"ant" ant=ID
;

MavenDecl:
	"maven" mvn=ID
;

LockDecl:
	"lock" lockName=ID
;


Config:
	"job" name=ID ("extends" parentConfig=[Config])? "("
	(isDisabled?="isDisabled")?
	(oldBuildHandling=OldBuildHandling)?
	(executeConcurrent?="executeConcurrent")?
	("description" description=STRING)?
	(isMatixJob?="isMatrixJob")?
	("restrictRunning" restrictTo=STRING)?
	('gitUrl' gitUrl=STRING)? // 3rdParty
	(concurrentBuild?="concurrentBuild")?
	(paramSection=ParameterSection)?
	(scm=Scm)?
	(trigger=TriggerSection)?
	(wrapper=WrapperSection)?
	(buildSection=BuildSection)?
	(publisherSection=PublisherSection)?
	")";

OldBuildHandling:
	"oldBuilds" "("
	("daysToKeep" daysToKeep=INT)?
	("maxNumberOfBuilds" maxNumberOfBuilds=INT)?
	("daysToKeepArtifact" daysToKeepArtifact=INT)?
	("maxNumberOfBuildsWithArtifact" maxNumberOfBuildsWithArtifact=INT)?
	")";

ParameterSection:
	"params" "("
	parameters+=Parameter+
	")";

Parameter:
	name=ID "("
	type=ParameterType
	("description" description=STRING)?
	")";

ParameterType:
	StringParam | BooleanParam | ChoiceParam;

StringParam:
	"String" value=STRING;

BooleanParam:
	"Boolean" (checked?="isChecked")?;

ChoiceParam:
	"Choice" choices=STRING;

Scm:
	ScmGit | ScmCVS;

ScmGit: // 3rdParty
	"git" "(" "url" url=STRING ("branch" branch=STRING)? (wipeOutWorkspace?="wipeOutWorkspace")?
	(excludedRegions?="excludedRegions")? ")";

ScmCVS:
	"cvs" "(" "cvsroot" root=STRING "modules" modules=STRING ")";

TriggerSection:
	"trigger" "(" buildtriggers+=(TimerTrigger | PollScmTrigger | FirstStartTrigger)+ ")";

TimerTrigger:
	"periodically" timer=STRING;

PollScmTrigger:
	"pollScm" poll=STRING;

FirstStartTrigger: // 3rdParty
	buildOnFirstStart?="buildOnFirstStart";

WrapperSection:
	"wrappers" "("
	wrappers+=(AnsiColor | Release | Timeout | Lock)+ // Android
	")";

AnsiColor: // 3rdParty
	(ansicolor?='ansicolor');

Release: // 3rdParty
	"release" "("
	(notKeepForever?='notKeepForever')?
	(paramSection=ParameterSection)?
	("pre" preBuildSection=BuildSection)?
	("success" successBuildSection=BuildSection)?
	("failed" failedBuildSection=BuildSection)?
	("final" finalBuildSection=BuildSection)?
	")";

Timeout: // 3rdParty
	"timeout" t=INT (failBuild?='failBuild')?;

Lock: // 3rdParty
	"lock" lock=STRING; // should be LockDecl

BuildSection:
	"builds" "("
	builds+=(Maven | Ant | Shell | Batch | SystemGroovy | TriggerBuilderSection)+ // | MSBuild | Rake
	")";

Maven:
	"maven" mvn=STRING "(" // should use MavenDecl
	"goals" mavenGoals=STRING
	("pom" mavenPOM=STRING)?
	("properties" mavenProperties=STRING)?
	(mavenPrivateRepo?="usePrivateRepo")?
	")";

Ant:
	"ant" ant=STRING "(" // should be AntDecl
	("targets" targets=STRING)?
	")"
;

Shell:
	"sh" "("
	shellScript=STRING
	(append?="append")?
	")";

Batch:
	"batch" "("
	batchScript=STRING
	(append?="append")?
	")";

SystemGroovy:
	"systemGroovy" "("
	groovyScript=STRING
	// TODO support more config
	")"
;

TriggerBuilderSection:
	"triggered builds" "("
	(triggeredBuilds+=TriggeredBuild)+
	")";

TriggeredBuild:
	builds=[Config]
	(blocking?='blocking')?
	(triggerParams+=(CurrentTriggerParams | PropertyFileTriggerParams | PredefinedTriggerParams)+)?;

CurrentTriggerParams:
	currentParams?='currentParams';

PropertyFileTriggerParams:
	'propertyFile' propertyFile=STRING;

PredefinedTriggerParams:
	'predefined' predefined=STRING;

PublisherSection:
	"publishers" "("
	publishers+=(Artifacts | TestResult | ExtMail | DownStream)+ // | Claim | TestResult | Cobertura | Rcov | HTMLReport | DownStreamTriggerBuilder)+
	")";

Artifacts:
	"artifacts" artifacts=STRING;

TestResult:
	"testresults" testresults=STRING (longIO?="longIO")?;

ExtMail:
	"extMail" "("
	("to" to=STRING)?
	("type" type=("html" | "text"))?
	("subject" subject=STRING)?
	("content" content=STRING)?
	("attachments" attachments=STRING)?
	"trigger" "("
	(mailTrigger+=MailTrigger)*
	")" ")";

MailTrigger:
	type=("Still-Failing" | "Success" | "Fixed" | "Still-Unstable" | "Before-Build" | "Failure" | "Unstable")
	(toList?="toList")?
	(toCommiter?="toCommiter")?
	(toRequester?="toRequester")?
	(toCulprits?="toCulprits")?
	("to" to=STRING)?
	("subject" subject=STRING)?
	("content" content=STRING)?;

DownStream:
	"downstream" "("
	builds+=DownStreamBuild
	")";

DownStreamBuild:
	builds=[Config]
	"when" condition=("Stable" | "Unstable" | "Not-Failed" | "Failed" | "Complete")
	(triggerParams+=(CurrentTriggerParams | PropertyFileTriggerParams | PredefinedTriggerParams)+)?;